{% comment %}
  Main Product Section
  Displays product images, details, and add to cart functionality
{% endcomment %}

<section class="product-page">
  <div class="container">
    <div class="product-main">
      <!-- Product Gallery -->
      <div class="product-gallery">
        <div class="product-image-main" id="product-image-main">
          {% if product.featured_image %}
            <img src="{{ product.featured_image | img_url: '800x800' }}" 
                 alt="{{ product.featured_image.alt | escape }}"
                 id="main-product-image">
          {% else %}
            <img src="{{ 'product-placeholder.png' | asset_url }}" alt="Product placeholder">
          {% endif %}
        </div>
        
        {% if product.images.size > 1 %}
          <div class="product-thumbnails">
            {% for image in product.images %}
              <div class="product-thumbnail {% if forloop.first %}active{% endif %}" 
                   data-image-url="{{ image | img_url: '800x800' }}"
                   onclick="changeProductImage(this)">
                <img src="{{ image | img_url: '100x100' }}" alt="{{ image.alt | escape }}">
              </div>
            {% endfor %}
          </div>
        {% endif %}
      </div>
      
      <!-- Product Info -->
      <div class="product-info">
        <h1 class="product-title">{{ product.title }}</h1>
        
        {% if product.vendor %}
          <p class="product-vendor" style="color: var(--color-text-gray); margin-bottom: 1rem;">
            {{ product.vendor }}
          </p>
        {% endif %}
        
        <div class="product-price">
          {% if product.compare_at_price > product.price %}
            <span style="text-decoration: line-through; opacity: 0.6; font-size: 1.25rem; margin-right: 0.5rem;">
              {{ product.compare_at_price | money }}
            </span>
          {% endif %}
          <span id="product-price">{{ product.price | money }}</span>
        </div>
        
        {% if product.description != blank %}
          <div class="product-description">
            {{ product.description }}
          </div>
        {% endif %}
        
        <!-- Product Form -->
        <form method="post" action="/cart/add" id="product-form" class="product-form">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="product-variant-id">
          
          <!-- Variants -->
          {% unless product.has_only_default_variant %}
            <div class="product-options">
              {% for option in product.options_with_values %}
                <div class="form-group">
                  <label class="form-label" for="option-{{ option.name | handleize }}">
                    {{ option.name }}
                  </label>
                  <select class="form-select" 
                          id="option-{{ option.name | handleize }}"
                          name="options[{{ option.name | escape }}]"
                          onchange="updateVariant()">
                    {% for value in option.values %}
                      <option value="{{ value | escape }}" 
                              {% if option.selected_value == value %}selected{% endif %}>
                        {{ value }}
                      </option>
                    {% endfor %}
                  </select>
                </div>
              {% endfor %}
            </div>
          {% endunless %}
          
          <!-- Quantity Selector -->
          <div class="form-group">
            <label class="form-label" for="quantity">Quantity</label>
            <div class="quantity-selector">
              <button type="button" class="quantity-btn" onclick="decreaseQuantity()">−</button>
              <input type="number" 
                     name="quantity" 
                     id="quantity" 
                     value="1" 
                     min="1" 
                     class="form-input quantity-input"
                     onchange="validateQuantity()">
              <button type="button" class="quantity-btn" onclick="increaseQuantity()">+</button>
            </div>
          </div>
          
          <!-- Add to Cart Button -->
          <button type="submit" 
                  class="btn btn-large btn-full-width" 
                  id="add-to-cart-button"
                  {% unless product.available %}disabled{% endunless %}>
            {% if product.available %}
              Add to Cart
            {% else %}
              Sold Out
            {% endif %}
          </button>
        </form>
        
        <!-- Additional Product Info -->
        {% if product.available %}
          <div style="margin-top: 1.5rem; padding: 1rem; background: rgba(184, 134, 11, 0.1); border-radius: 4px; border: 1px solid var(--color-border);">
            <p style="margin: 0; color: var(--color-text-gray); font-size: 0.875rem;">
              ✓ In Stock - Ships within 2-3 business days<br>
              ✓ Free shipping on orders over $500<br>
              ✓ 30-day return policy
            </p>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</section>

<script>
  // Product variants data
  const productVariants = {{ product.variants | json }};
  const productOptions = {{ product.options_with_values | json }};
  
  // Change product image
  function changeProductImage(thumbnail) {
    const imageUrl = thumbnail.getAttribute('data-image-url');
    const mainImage = document.getElementById('main-product-image');
    if (mainImage) {
      mainImage.src = imageUrl;
    }
    
    // Update active thumbnail
    document.querySelectorAll('.product-thumbnail').forEach(function(thumb) {
      thumb.classList.remove('active');
    });
    thumbnail.classList.add('active');
  }
  
  // Update variant based on selected options
  function updateVariant() {
    const selectedOptions = [];
    document.querySelectorAll('.form-select').forEach(function(select) {
      selectedOptions.push(select.value);
    });
    
    // Find matching variant
    const variant = productVariants.find(function(v) {
      return v.options.every(function(option, index) {
        return option === selectedOptions[index];
      });
    });
    
    if (variant) {
      // Update variant ID
      document.getElementById('product-variant-id').value = variant.id;
      
      // Update price
      const priceElement = document.getElementById('product-price');
      if (priceElement) {
        priceElement.textContent = Shopify.formatMoney(variant.price, theme.moneyFormat);
      }
      
      // Update availability
      const button = document.getElementById('add-to-cart-button');
      if (variant.available) {
        button.disabled = false;
        button.textContent = 'Add to Cart';
      } else {
        button.disabled = true;
        button.textContent = 'Sold Out';
      }
      
      // Update image if variant has one
      if (variant.featured_image && variant.featured_image.src) {
        const mainImage = document.getElementById('main-product-image');
        if (mainImage) {
          mainImage.src = variant.featured_image.src;
        }
      }
    }
  }
  
  // Quantity controls
  function increaseQuantity() {
    const input = document.getElementById('quantity');
    input.value = parseInt(input.value) + 1;
  }
  
  function decreaseQuantity() {
    const input = document.getElementById('quantity');
    if (parseInt(input.value) > 1) {
      input.value = parseInt(input.value) - 1;
    }
  }
  
  function validateQuantity() {
    const input = document.getElementById('quantity');
    if (parseInt(input.value) < 1) {
      input.value = 1;
    }
  }
  
  // Handle add to cart form submission
  document.getElementById('product-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const button = document.getElementById('add-to-cart-button');
    const originalText = button.textContent;
    
    button.disabled = true;
    button.textContent = 'Adding...';
    
    fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      // Update cart count
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          updateCartCount(cart.item_count);
        });
      
      button.textContent = 'Added! ✓';
      setTimeout(function() {
        button.disabled = false;
        button.textContent = originalText;
      }, 2000);
    })
    .catch(error => {
      console.error('Error:', error);
      button.disabled = false;
      button.textContent = originalText;
      alert('There was an error adding the product to your cart. Please try again.');
    });
  });
</script>

{% schema %}
{
  "name": "Product",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "label": "Enable image zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_variant_labels",
      "label": "Show variant labels",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label": "Show dynamic checkout button",
      "default": true
    }
  ]
}
{% endschema %}

